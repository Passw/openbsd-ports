Index: llvm/lib/Target/AArch64/AArch64FrameLowering.cpp
--- llvm/lib/Target/AArch64/AArch64FrameLowering.cpp.orig
+++ llvm/lib/Target/AArch64/AArch64FrameLowering.cpp
@@ -212,6 +212,7 @@
 #include "AArch64InstrInfo.h"
 #include "AArch64MachineFunctionInfo.h"
 #include "AArch64RegisterInfo.h"
+#include "AArch64ReturnProtectorLowering.h"
 #include "AArch64Subtarget.h"
 #include "MCTargetDesc/AArch64AddressingModes.h"
 #include "MCTargetDesc/AArch64MCTargetDesc.h"
@@ -3941,6 +3942,10 @@ void AArch64FrameLowering::determineCalleeSaves(Machin
                                 ? RegInfo->getBaseRegister()
                                 : (unsigned)AArch64::NoRegister;
 
+  if (MFI.hasReturnProtectorRegister() && MFI.getReturnProtectorNeedsStore()) {
+    SavedRegs.set(MFI.getReturnProtectorRegister());
+  }
+
   unsigned ExtraCSSpill = 0;
   bool HasUnpairedGPR64 = false;
   bool HasPairZReg = false;
@@ -5346,6 +5351,10 @@ unsigned AArch64FrameLowering::getWinEHFuncletFrameSiz
   // This is the amount of stack a funclet needs to allocate.
   return alignTo(CSSize + MF.getFrameInfo().getMaxCallFrameSize(),
                  getStackAlign());
+}
+
+const ReturnProtectorLowering *AArch64FrameLowering::getReturnProtector() const {
+  return &RPL;
 }
 
 namespace {
