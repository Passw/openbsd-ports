Index: llvm/include/llvm/CodeGen/AsmPrinter.h
--- llvm/include/llvm/CodeGen/AsmPrinter.h.orig
+++ llvm/include/llvm/CodeGen/AsmPrinter.h
@@ -521,6 +521,11 @@ class LLVM_ABI AsmPrinter : public MachineFunctionPass
   void emitAlignment(Align Alignment, const GlobalObject *GV = nullptr,
                      unsigned MaxBytesToEmit = 0) const;
 
+  /// Emit an alignment directive to the specified power of two boundary,
+  /// like emitAlignment, but call emitTrapToAlignment to fill with
+  /// trap instructions instead of NOPs.
+  void emitTrapAlignment(Align Alignment, const GlobalObject *GO = nullptr) const;
+
   /// Lower the specified LLVM Constant to an MCExpr.
   /// When BaseCV is present, we are lowering the element at BaseCV plus Offset.
   virtual const MCExpr *lowerConstant(const Constant *CV,
@@ -590,6 +595,11 @@ class LLVM_ABI AsmPrinter : public MachineFunctionPass
   virtual void emitInstruction(const MachineInstr *) {
     llvm_unreachable("EmitInstruction not implemented");
   }
+
+  /// Emit an alignment directive to the specified power
+  /// of two boundary, but use Trap instructions for alignment
+  /// sections that should never be executed.
+  virtual void emitTrapToAlignment(Align Alignment) const;
 
   /// Return the symbol for the specified constant pool entry.
   virtual MCSymbol *GetCPISymbol(unsigned CPID) const;
