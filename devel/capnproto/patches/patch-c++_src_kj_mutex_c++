Index: c++/src/kj/mutex.c++
--- c++/src/kj/mutex.c++.orig
+++ c++/src/kj/mutex.c++
@@ -871,11 +871,9 @@ void Once::reset() {
   }
 
 Mutex::Mutex(): mutex(PTHREAD_RWLOCK_INITIALIZER) {
-#if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ < 1070
   // In older versions of MacOS, mutexes initialized statically cannot be destroyed,
   // so we must call the init function.
   KJ_PTHREAD_CALL(pthread_rwlock_init(&mutex, NULL));
-#endif
 }
 Mutex::~Mutex() {
   KJ_PTHREAD_CLEANUP(pthread_rwlock_destroy(&mutex));
@@ -957,12 +955,10 @@ void Mutex::wait(Predicate& predicate, Maybe<Duration>
     PTHREAD_COND_INITIALIZER, PTHREAD_MUTEX_INITIALIZER
   };
 
-#if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ < 1070
   // In older versions of MacOS, mutexes initialized statically cannot be destroyed,
   // so we must call the init function.
   KJ_PTHREAD_CALL(pthread_cond_init(&waiter.condvar, NULL));
   KJ_PTHREAD_CALL(pthread_mutex_init(&waiter.stupidMutex, NULL));
-#endif
 
   addWaiter(waiter);
 
@@ -1074,11 +1070,9 @@ void Mutex::induceSpuriousWakeupForTest() {
 Once::Once(bool startInitialized)
     : state(startInitialized ? INITIALIZED : UNINITIALIZED),
       mutex(PTHREAD_MUTEX_INITIALIZER) {
-#if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ < 1070
   // In older versions of MacOS, mutexes initialized statically cannot be destroyed,
   // so we must call the init function.
   KJ_PTHREAD_CALL(pthread_mutex_init(&mutex, NULL));
-#endif
 }
 Once::~Once() {
   KJ_PTHREAD_CLEANUP(pthread_mutex_destroy(&mutex));
