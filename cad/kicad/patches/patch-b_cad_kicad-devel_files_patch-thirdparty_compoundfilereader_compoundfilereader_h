fix build with libc++ 19 (From FreeBSD)
As noted in the libc++ 19 release notes [1], std::char_traits<> is now
only provided for char, char8_t, char16_t, char32_t and wchar_t, and any
instantiation for other types will fail.

The first batch of errors can be fixed by providing a simple `length()`
function for the `NANODBC_SQLCHAR const*` type. The second batch can be
fixed by using `std::basic_string<char16_t>` for `utf16string`, and
adjusting the call to `std::basic_string<char16_t>::append`. The third
batch can be fixed by adding a `char_traits` definition specifically for
the `wxUniChar` type.

[1] https://libcxx.llvm.org/ReleaseNotes/19.html#deprecations-and-removals
Index: b/cad/kicad-devel/files/patch-thirdparty_compoundfilereader_compoundfilereader.h
--- b/cad/kicad-devel/files/patch-thirdparty_compoundfilereader_compoundfilereader.h.orig
+++ b/cad/kicad-devel/files/patch-thirdparty_compoundfilereader_compoundfilereader.h
@@ -0,0 +1,20 @@
+--- thirdparty/compoundfilereader/compoundfilereader.h.orig	2024-10-11 09:03:05 UTC
++++ thirdparty/compoundfilereader/compoundfilereader.h
+@@ -131,7 +131,7 @@ struct helper
+     }
+ };
+ 
+-typedef std::basic_string<uint16_t> utf16string;
++typedef std::basic_string<char16_t> utf16string;
+ typedef std::function<int(const COMPOUND_FILE_ENTRY*, const utf16string& dir, int level)>
+     EnumFilesCallback;
+ 
+@@ -249,7 +249,7 @@ class CompoundFileReader (private)
+             utf16string newDir = dir;
+             if (dir.length() != 0)
+                 newDir.append(1, '\n');
+-            newDir.append(entry->name, entry->nameLen / 2);
++            newDir.append(reinterpret_cast<const char16_t*>(entry->name), entry->nameLen / 2);
+             EnumNodes(GetEntry(entry->childID), currentLevel + 1, maxLevel, newDir, callback);
+         }
+ 
