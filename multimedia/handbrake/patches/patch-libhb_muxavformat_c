Index: libhb/muxavformat.c
--- libhb/muxavformat.c.orig
+++ libhb/muxavformat.c
@@ -556,10 +556,11 @@ static int avformatInit( hb_mux_object_t * m )
             uint8_t *mastering_data = av_malloc(sizeof(AVMasteringDisplayMetadata));
             memcpy(mastering_data, &mastering, sizeof(AVMasteringDisplayMetadata));
 
-            av_stream_add_side_data(track->st,
+            av_packet_side_data_add(&track->st->codecpar->coded_side_data,
+                                    &track->st->codecpar->nb_coded_side_data,
                                     AV_PKT_DATA_MASTERING_DISPLAY_METADATA,
                                     mastering_data,
-                                    sizeof(AVMasteringDisplayMetadata));
+                                    sizeof(AVMasteringDisplayMetadata), 0);
         }
 
         if (job->coll.max_cll && job->coll.max_fall)
@@ -571,10 +572,11 @@ static int avformatInit( hb_mux_object_t * m )
             uint8_t *coll_data = av_malloc(sizeof(AVContentLightMetadata));
             memcpy(coll_data, &coll, sizeof(AVContentLightMetadata));
 
-            av_stream_add_side_data(track->st,
+            av_packet_side_data_add(&track->st->codecpar->coded_side_data,
+                                    &track->st->codecpar->nb_coded_side_data,
                                     AV_PKT_DATA_CONTENT_LIGHT_LEVEL,
                                     coll_data,
-                                    sizeof(AVContentLightMetadata));
+                                    sizeof(AVContentLightMetadata), 0);
         }
     }
 
@@ -884,9 +886,10 @@ static int avformatInit( hb_mux_object_t * m )
 
                         track = audio->priv.mux_data;
                         fallback_track = fallback->priv.mux_data;
-                        sd = (int*)av_stream_new_side_data(track->st,
-                                                     AV_PKT_DATA_FALLBACK_TRACK,
-                                                     sizeof(int));
+                        sd = (int*)av_packet_side_data_new(&track->st->codecpar->coded_side_data,
+                                                           &track->st->codecpar->nb_coded_side_data,
+                                                           AV_PKT_DATA_FALLBACK_TRACK,
+                                                           sizeof(int), 0);
                         if (sd != NULL)
                         {
                             *sd = fallback_track->st->index;
